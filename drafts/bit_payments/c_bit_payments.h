/// some useful descriptions copied from official bitcoin-core page: "bitcoin.org/en/developer-reference"
#ifndef C_BIT_PAYMENTS_HPP
#define C_BIT_PAYMENTS_HPP

#include <bitcoinapi/bitcoinapi.h>
/// bitcoinapi: github.com/minium/bitcoin-api-cpp
#include <iostream>
#include <memory>
#include <map>

class c_bit_payments {
	public:
		c_bit_payments(std::string username, std::string password, std::string address,int port);
		~c_bit_payments();
		
		/*********************************method*get_account_address******************************************************************//**
		 * get_account_address -- returns the current Bitcoin address for receiving payments to this account. If the account doesnâ€™t exist,
		 * it creates both the account and a new address for receiving payment. Once a payment has been received to an address,
		 * future calls to this RPC for the same account will return a different address.
		 ********************************************************************************************************************************/
		std::string get_account_address(const std::string& account_name = "");
		std::string sendfrom(const std::string& fromaccount, const std::string& tobitcoinaddress, double amount);
		
		void show_general_info();
		/*********************************method*show_status**************************************************************************//**
		 * confirmations -- The minimum number of confirmations an externally-generated transaction must have before it is counted
		 * towards the balance. Transactions generated by this node are counted immediately. Typically, externally-generated transactions
		 * are payments to this wallet and transactions generated by this node are payments to other wallets. Use 0 to count unconfirmed
		 * transactions. Default is 1
		 *
		 * include_empty -- Set to true to display accounts which have never received a payment. Set to false (the default) to only include
		 * accounts which have received a payment. Any account which has received a payment will be displayed even if its current balance is 0
		 ********************************************************************************************************************************/
		void show_status(int confirmations = 1, bool include_empty = 0);
		
	private:
		std::unique_ptr<BitcoinAPI> btc;
};

#endif // BIT_PAYMENTS